apply plugin: 'eclipse'

buildscript {
	repositories {
	    mavenCentral()
	}
	
	dependencies {
		classpath 'com.bmuschko:gradle-docker-plugin:2.6'
	}
}

def dockerHost = System.getenv('DOCKER_HOST')

if (dockerHost.indexOf('tcp') == 0)
{
	dockerHost = dockerHost.replace('tcp','https')
}

def determinedEnvironment = ["LICENSE=accept", 
			"service_concierge=" + System.getenv('SERVICE_CONCIERGE'),
			"service_room=" + System.getenv('SERVICE_ROOM'),
			"ADMIN_PASSWORD=" + System.getenv('ADMIN_PASSWORD'),
			"REGISTRATION_SECRET=" + System.getenv('REGISTRATION_SECRET')]

if (null != System.getenv("LOGGING_DOCKER_HOST"))
{
	determinedEnvironment << "LOGGING_DOCKER_HOST=" + System.getenv("LOGGING_DOCKER_HOST")
}

task copyTask(type: Copy) {
    from '../room-app/build/libs/room-app-1.0.war'
    into 'servers/gameon-room/apps/'
    rename("room-app-1.0.war", "room-app.war")
}

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

docker {
    url = dockerHost
    certPath = new File(System.getenv("DOCKER_CERT_PATH"))
}

task buildDockerImage(type: DockerBuildImage, dependsOn: 'copyTask') {
	inputDir = file('.')
    tag = 'gameon-room'
    quiet = false
}

task stopCurrentContainer(type: DockerStopContainer) {
    targetContainerId { "gameon-room" }
    timeout 0
}

task removeCurrentContainer(type: DockerRemoveContainer) {
	targetContainerId { "gameon-room" }
}

task createNewContainer(type: DockerCreateContainer) {
	targetImageId { "gameon-room" }
	containerName = "gameon-room"
	portBindings = ['9080:9080']
	env = determinedEnvironment
}

task startNewContainer(type: DockerStartContainer) {
	dependsOn createNewContainer
	targetContainerId { "gameon-room" }
}

